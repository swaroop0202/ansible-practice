- name: configuring the backend server
  hosts: backend
  become: true
  tasks:
  - name: disabling the nodejs
    ansible.builtin.command: dnf module disable nodejs -y
  - name: enabling nodejs
    ansible.builtin.command: dnf module enable nodejs:20 -y
  - name: installing nodejs and mysql
    dnf:
      name:
        - nodejs
        - mysql
      state: present
  - name: install python mysql dependencies
    ansible.builtin.pip:
      name:
      - PyMySQL
      - cryptography
      executable: pip3.9 # pip3.11 if python version is 3.11
  - name: adding the user
    ansible.builtin.user:
      name: expense
  - name: creating the directory
    ansible.builtin.file:
      path: /app
      state: directory
  -  name: get the backend code
     ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip
  - name: unzip the backendcode
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes
  - name: download the dependencies
    ansible.builtin.command: npm install 
    args:
      chdir: /app
  - name: copying the servie file 
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system
  - name: import data into mysql
    community.mysql.mysql_db:
      login_host: 172.31.85.158
      login_user: root
      login_password: ExpenseApp@1
      state: import
      name: mysql
      target: /app/schema/backend.sql
  - name: reloading the backend
    ansible.builtin.systemd_service:
      daemon_reload: true
  - name: start the backend backend
    ansible.builtin.service:
      name: backend
      state: started
      enabled: yes
